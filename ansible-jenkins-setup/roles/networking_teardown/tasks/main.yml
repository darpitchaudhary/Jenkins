- name: Find EC2 Facts
  ec2_instance_info:
    region: "{{ aws_region }}"
    profile: "{{ aws_profile }}"
  register: ec2_facts
- debug: var=ec2_tags

- name: Create EC2 Tag String
  set_fact:
    tag: "{{ tag | default({}) | combine({ ec2_tags.key:ec2_tags.value }) }}"

- name: Filter EC2 instances
  set_fact:
    ec2_instances: |
      {% set instances = [] %}
      {% for item in ec2_facts.instances if item.tags == tag  -%}
        {{ instances.append(item.instance_id) }}
      {%- endfor %}
      {{ instances }}
- debug: var=ec2_facts.instances[0].tags

- name: Terminate EC2 server
  ec2:
    region: "{{ aws_region }}"
    profile: "{{ aws_profile }}"
    instance_ids: "{{ item }}"
    state: absent
    wait: yes
  with_items: "{{ ec2_instances }}"

- name: Fetch Jenkins VPC Facts
  ec2_vpc_net_info:
    region: "{{ aws_region }}"
    profile: "{{ aws_profile }}"
    filters:
      "tag:Name": "{{ vpc_name }}"
  register: jenkins_vpc

- name: Delete security group
  ec2_group:
    region: "{{ aws_region }}"
    profile: "{{ aws_profile }}"
    name: "{{ sec_gr_name }}"
    state: absent

- name: Finding Subnet_1 Info
  ec2_vpc_subnet_info:
    region: "{{ aws_region }}"
    profile: "{{ aws_profile }}"
    filters:
      "tag:Name": "{{ sb1_tag }}"
  register: subnet1

- name: Delete Subnet_1
  ec2_vpc_subnet:
    region: "{{ aws_region }}"
    profile: "{{ aws_profile }}"
    state: absent
    vpc_id: "{{ jenkins_vpc.vpcs[0].vpc_id }}"
    cidr: "{{ subnet1_cidr }}"

- name: Finding Subnet_2 Info
  ec2_vpc_subnet_info:
    region: "{{ aws_region }}"
    profile: "{{ aws_profile }}"
    filters:
      "tag:Name": "{{ sb2_tag }}"
  register: subnet2

- name: Delete Subnet_2
  ec2_vpc_subnet:
    region: "{{ aws_region }}"
    profile: "{{ aws_profile }}"
    state: absent
    vpc_id: "{{ jenkins_vpc.vpcs[0].vpc_id }}"
    cidr: "{{ subnet2_cidr }}"

- name: Delete Internet Gateway
  ec2_vpc_igw:
    region: "{{ aws_region }}"
    profile: "{{ aws_profile }}"
    state: absent
    vpc_id: "{{ jenkins_vpc.vpcs[0].vpc_id }}"

- name: Fetch Route Table Info
  ec2_vpc_route_table_info:
    region: "{{ aws_region }}"
    profile: "{{ aws_profile }}"
    filters:
      "tag:Name": "{{ route_tbl_name }}"
  register: jenkins_route_tbl

- name: Delete Route Table
  ec2_vpc_route_table:
    region: "{{ aws_region }}"
    profile: "{{ aws_profile }}"
    vpc_id: "{{ jenkins_vpc.vpcs[0].vpc_id }}"
    state: absent
    lookup: id
    route_table_id: "{{ jenkins_route_tbl.route_tables[0].id }}"

- name: Delete VPC
  ec2_vpc_net:
    name: "{{ vpc_name }}"
    region: "{{ aws_region }}"
    profile: "{{ aws_profile }}"
    cidr_block: "{{ vpc_cidr }}"
    state: absent



